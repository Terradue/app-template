def dockerRegistry = '{{cookiecutter.docker_repo}}'

pipeline {
    agent any
    stages {
        stage('Build & Publish Docker') {
            steps {
                script {
                    def dockerPartialTag = sh returnStdout: true, script: "cat ./setup.cfg | grep name | sed -e \"s/.*=//g\" -e \"s/['| ]//g\" | tr -d '\n'"
                    def dockerNewVersion = sh returnStdout: true, script: "cat ./setup.cfg | grep version | sed -e \"s/.*=//g\" -e \"s/['| ]//g\"  | tr -d '\n'"
                    
                    def dockerTag = "${dockerRegistry}/${dockerPartialTag}"
                    
                    echo "dockerTag = ${dockerTag}a"
                    echo "dockerNewVersion = ${dockerNewVersion}a" 

                    def app = docker.build("${dockerTag}", "-f .docker/Dockerfile .")
                    def mType=getTypeOfVersion(env.BRANCH_NAME)
                    docker.withRegistry("https://${dockerRegistry}", 'docker-terradue') {
                     app.push("${mType}${dockerNewVersion}")
                      app.push("${mType}latest")
                    }
                }
            }
        }
    }
}

def getTypeOfVersion(branchName) {
  
  def matcher = (env.BRANCH_NAME =~ /master/)
  if (matcher.matches())
    return ""
  
  return "dev"
}
